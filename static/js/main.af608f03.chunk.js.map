{"version":3,"sources":["components/Feedback/Feedback.module.css","components/Statistics/Statistics.module.css","components/Container/Container.module.css","components/Section/Section.module.css","components/Feedback/FeedbackOptions.js","components/Statistics/Statistics.js","components/Container/Container.js","components/Section/Section.js","components/Notification/Notification.js","App.js","reportWebVitals.js","index.js"],"names":["module","exports","FeedbackOptions","onLeaveFeedback","className","s","button","onClick","protoType","PropTypes","func","isRequired","Statistics","good","neutral","bad","total","positivePercentage","list","number","Container","children","container","node","Section","title","section","string","Notification","massage","App","useState","setGood","setNeutral","setBad","countTotalFeedback","event","console","log","target","textContent","state","totalFeedback","Math","round","countPositiveFeedbackPercentage","message","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.af608f03.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"button\":\"Feedback_button__3XeUw\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"list\":\"Statistics_list__a8BcO\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Container_container__1m05L\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"section\":\"Section_section__2tT9U\"};","import PropTypes from 'prop-types';\nimport s from './Feedback.module.css';\n\nfunction FeedbackOptions({ onLeaveFeedback }) {\n    return (\n        <>\n            <button className={s.button} onClick={onLeaveFeedback}>\n                Good\n            </button>\n            <button className={s.button} onClick={onLeaveFeedback}>\n                Neutral\n            </button>\n            <button className={s.button} onClick={onLeaveFeedback}>\n                Bad\n            </button>\n        </>\n    );\n}\n\nFeedbackOptions.protoType = {\n    onLeaveFeedback: PropTypes.func.isRequired,\n};\n\nexport default FeedbackOptions;\n","import PropTypes from 'prop-types';\nimport s from './Statistics.module.css';\n\nfunction Statistics({\n    good = 0,\n    neutral = 0,\n    bad = 0,\n    total = 0,\n    positivePercentage = 0,\n}) {\n    return (\n        <ul className={s.list}>\n            <li>Good: {good}</li>\n            <li>Neutral: {neutral}</li>\n            <li>Bad: {bad}</li>\n            <li>Total: {total}</li>\n            <li>Positive Feedback: {positivePercentage}%</li>\n        </ul>\n    );\n}\n\nStatistics.protoType = {\n    good: PropTypes.number.isRequired,\n    neutral: PropTypes.number.isRequired,\n    bad: PropTypes.number.isRequired,\n    total: PropTypes.number.isRequired,\n    positivePercentage: PropTypes.number.isRequired,\n};\n\nexport default Statistics;\n","import PropTypes from 'prop-types';\nimport s from './Container.module.css';\n\nfunction Container({ children }) {\n    return <div className={s.container}>{children}</div>;\n}\n\nContainer.protoType = {\n    children: PropTypes.node.isRequired,\n};\n\nexport default Container;\n","import PropTypes from 'prop-types';\nimport s from './Section.module.css';\n\nfunction Section({ title, children }) {\n    return (\n        <section className={s.section}>\n            <h2>{title}</h2>\n            {children}\n        </section>\n    );\n}\n\nSection.protoType = {\n    title: PropTypes.string.isRequired,\n    children: PropTypes.node.isRequired,\n};\n\nexport default Section;\n","import PropTypes from 'prop-types';\n\nfunction Notification({ massage = 'Pleace, leave feedback' }) {\n    return <p>{massage}</p>;\n}\n\nexport default Notification;\n\nNotification.protoType = {\n    massage: PropTypes.string.isRequired,\n};\n","import './App.css';\nimport { useState } from 'react';\nimport FeedbackOptions from './components/Feedback/FeedbackOptions';\nimport Statistics from './components/Statistics/Statistics';\nimport Container from './components/Container/Container';\nimport Section from './components/Section/Section';\nimport Notification from './components/Notification/Notification';\n\nfunction App() {\n    const [good, setGood] = useState(0);\n    const [neutral, setNeutral] = useState(0);\n    const [bad, setBad] = useState(0);\n\n    const handleChange = event => {\n        console.log(event.target.textContent);\n        let option = event.target.textContent;\n\n        switch (option) {\n            case 'Good':\n                setGood(state => state + 1);\n                break;\n            case 'Neutral':\n                setNeutral(state => state + 1);\n                break;\n            case 'Bad':\n                setBad(state => state + 1);\n                break;\n            default:\n                return;\n        }\n    };\n\n    const countTotalFeedback = () => {\n        return good + neutral + bad;\n    };\n\n    const countPositiveFeedbackPercentage = () => {\n        const totalFeedback = countTotalFeedback();\n        return Math.round((good / totalFeedback) * 100);\n    };\n\n    return (\n        <Container>\n            <Section title=\"Please leave feedback\">\n                <FeedbackOptions onLeaveFeedback={handleChange} />\n            </Section>\n            <Section title=\"Statistics\">\n                {countTotalFeedback() ? (\n                    <Statistics\n                        good={good}\n                        neutral={neutral}\n                        bad={bad}\n                        total={countTotalFeedback()}\n                        positivePercentage={countPositiveFeedbackPercentage()}\n                    />\n                ) : (\n                    <Notification message=\"No feedback given\" />\n                )}\n            </Section>\n        </Container>\n    );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n    if (onPerfEntry && onPerfEntry instanceof Function) {\n        import('web-vitals').then(\n            ({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n                getCLS(onPerfEntry);\n                getFID(onPerfEntry);\n                getFCP(onPerfEntry);\n                getLCP(onPerfEntry);\n                getTTFB(onPerfEntry);\n            },\n        );\n    }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n    <React.StrictMode>\n        <App />\n    </React.StrictMode>,\n    document.getElementById('root'),\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}